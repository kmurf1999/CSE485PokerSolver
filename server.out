[Running 'cargo run']
warning: /Users/kmurph/Documents/CSE485PokerSolver/poker_solver/Cargo.toml: unused manifest key: target.cfg(any(windows, unix)).rustflags
warning: /Users/kmurph/Documents/CSE485PokerSolver/poker_solver/information_abstraction/Cargo.toml: unused manifest key: target.cfg(any(windows, unix)).rustflags
warning: unused import: `Rng`
 --> client/src/lib.rs:9:12
  |
9 | use rand::{Rng, thread_rng};
  |            ^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused variable: `amt`
  --> client/src/lib.rs:59:33
   |
59 |                     Action::BET(amt) => {
   |                                 ^^^ help: if this is intentional, prefix it with an underscore: `_amt`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `amt`
  --> client/src/lib.rs:64:35
   |
64 |                     Action::RAISE(amt) => {
   |                                   ^^^ help: if this is intentional, prefix it with an underscore: `_amt`

warning: field is never read: `game_id`
  --> client/src/lib.rs:20:5
   |
20 |     game_id: String
   |     ^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: 4 warnings emitted

warning: unused variable: `e`
   --> server/src/game_handler.rs:230:21
    |
230 |                 Err(e) => {
    |                     ^ help: if this is intentional, prefix it with an underscore: `_e`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `e`
   --> server/src/game_handler.rs:256:17
    |
256 |             Err(e) => {
    |                 ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: 2 warnings emitted

    Finished dev [unoptimized + debuginfo] target(s) in 0.35s
     Running `/Users/kmurph/Documents/CSE485PokerSolver/poker_solver/target/debug/server`
thread 'main' panicked at 'error binding to 127.0.0.1:3001: error creating server listener: Address already in use (os error 48)', /Users/kmurph/.cargo/registry/src/github.com-1ecc6299db9ec823/warp-0.3.0/src/server.rs:213:27
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
[Finished running. Exit status: 101]
[Running 'cargo run']
warning: /Users/kmurph/Documents/CSE485PokerSolver/poker_solver/Cargo.toml: unused manifest key: target.cfg(any(windows, unix)).rustflags
warning: /Users/kmurph/Documents/CSE485PokerSolver/poker_solver/information_abstraction/Cargo.toml: unused manifest key: target.cfg(any(windows, unix)).rustflags
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
[Running 'cargo run']
warning: /Users/kmurph/Documents/CSE485PokerSolver/pokwarning: /Users/kmurph/Documents/CSE485PokerSolver/poker_solver/information_abstraction/Cargo.toml: unused manifest key: target.cfg(any(windows, unix)).rustflags
warning: /Users/kmurph/Documents/CSE485PokerSolver/poker_solver/Cargo.toml: unused m    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
[Running 'cargo run']
wawarning: /Users/kmurph/Documents/CSE485PokerSolver/poker_solver/information_abstraction/Cargo.toml: unused manifest key: target.cfg(any(windows, unix)).rustflags
warning: /Users/kmurph/Documents/CSE485PokerSolver/poker_solver/Cargo.toml: unused manifest key: target.cfg(any(windows, unix)).rustflags
    Blocking waiting for file lock on package cach      Blocking waiting for file lock on package cach      Blocking waiting for file lock on package cach      Blocking waiting for file lock on package cach      Blocking waiting for file lock on build director[R[Running 'cargo run'warning: /Users/kmurph/Documents/CSE485PokerSolver/poker_solver/information_abstraction/Cargo.toml: unused manifest key: target.cfg(any(windows, unix)).rustflags
warning: /Users/kmurph/Documents/CSE485PokerSolver/poker_solver/Cargo.toml: unused manifest key: target.cfg(any(windows, unix)).rustflags
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on build directory
warning: unused import: `Message`
 --> client/src/lib.rs:4:31
  |
4 | use websocket::{OwnedMessage, Message};
  |                               ^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `PokerEvent`, `PokerMessage`
 --> client/src/lib.rs:7:27
  |
7 | use poker_solver::codec::{PokerEvent, PokerMessage};
  |                           ^^^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `poker_solver::action::Action`
 --> client/src/lib.rs:8:5
  |
8 | use poker_solver::action::Action;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Rng`
 --> client/src/lib.rs:9:12
  |
9 | use rand::{Rng, thread_rng};
  |            ^^^

warning: unused import: `rand::seq::SliceRandom`
  --> client/src/lib.rs:10:5
   |
10 | use rand::seq::SliceRandom;
   |     ^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `serde_json::json`
  --> client/src/lib.rs:11:5
   |
11 | use serde_json::json;
   |     ^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
  --> client/src/lib.rs:24:9
   |
24 |     let mut rng = thread_rng();
   |         ----^^^
   |         |
   |         help: remove this `mut`
   |
   = note: `#[warn(unused_mut)]` on by default

warning: variable does not need to be mutable
  --> client/src/lib.rs:25:24
   |
25 |     let (mut receiver, mut sender) = client.split().unwrap();
   |                        ----^^^^^^
   |                        |
   |                        help: remove this `mut`

warning: variable does not need to be mutable
  --> client/src/lib.rs:26:9
   |
26 |     let mut hand_state = GameState::default();
   |         ----^^^^^^^^^^
   |         |
   |         help: remove this `mut`

warning: variable does not need to be mutable
   --> client/src/lib.rs:122:24
    |
122 |     let (mut receiver, mut sender) = client.split().unwrap();
    |                        ----^^^^^^
    |                        |
    |                        help: remove this `mut`

warning: unused variable: `rng`
  --> client/src/lib.rs:24:13
   |
24 |     let mut rng = thread_rng();
   |             ^^^ help: if this is intentional, prefix it with an underscore: `_rng`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `sender`
  --> client/src/lib.rs:25:28
   |
25 |     let (mut receiver, mut sender) = client.split().unwrap();
   |                            ^^^^^^ help: if this is intentional, prefix it with an underscore: `_sender`

warning: unused variable: `hand_state`
  --> client/src/lib.rs:26:13
   |
26 |     let mut hand_state = GameState::default();
   |             ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_hand_state`

warning: unused variable: `sender`
   --> client/src/lib.rs:122:28
    |
122 |     let (mut receiver, mut sender) = client.split().unwrap();
    |                            ^^^^^^ help: if this is intentional, prefix it with an underscore: `_sender`

warning: function is never used: `client_loop`
  --> client/src/lib.rs:23:10
   |
23 | async fn client_loop(client: Client<std::net::TcpStream>) {
   |          ^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: 15 warnings emitted

warning: unused variable: `e`
   --> server/src/game_handler.rs:231:21
    |
231 |                 Err(e) => {
    |                     ^ help: if this is intentional, prefix it with an underscore: `_e`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `e`
   --> server/src/game_handler.rs:257:17
    |
257 |             Err(e) => {
    |                 ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: 2 warnings emitted

    Finished dev [unoptimized + debuginfo] target(s) in 33.25s
     Running `/Users/kmurph/Documents/CSE485PokerSolver/poker_solver/target/debug/server`
thread 'main' panicked at 'error binding to 127.0.0.1:3001: error creating server listener: Address already in use (os error 48)', /Users/kmurph/.cargo/registry/src/github.com-1ecc6299db9ec823/warp-0.3.0/src/server.rs:213:27
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
[Finished running. Exit status: 101]
[R[Running 'cargo run'wawarning: /Users/kmurph/Documents/CSE485PokerSolver/poker_solver/Cargo.toml: unused manifest key: target.cfg(any(windows, unix)).rustflags
warning: /Users/kmurph/Documents/CSE485PokerSolver/poker_solver/information_abstraction/Cargo.toml: unused manifest key: target.cfg(any(windows, unix)).rustflag    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
warning: unused import: `Message`
 --> client/src/lib.rs:4:31
  |
4 | use websocket::{OwnedMessage, Message}warning: unused import: `Message`
 --> client/src/lib.rs:4:31
  |
4 | use websocket::{OwnedMessage, Message};
  |                               ^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `PokerEvent`, `PokerMessage`
 --> client/src/lib.rs:7:27
  |
7 | use poker_solver::codec::{PokerEvent, PokerMessage};
  |                           ^^^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `poker_solver::action::Action`
 --> client/src/lib.rs:8:5
  |
8 | use poker_solver::action::Action;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Rng`
 --> client/src/lib.rs:9:12
  |
9 | use rand::{Rng, thread_rng};
  |            ^^^

warning: unused import: `rand::seq::SliceRandom`
  --> client/src/lib.rs:10:5
   |
10 | use rand::seq::SliceRandom;
   |     ^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `serde_json::json`
  --> client/src/lib.rs:11:5
   |
11 | use serde_json::json;
   |     ^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
  --> client/src/lib.rs:24:9
   |
24 |     let mut rng = thread_rng();
   |         ----^^^
   |         |
   |         help: remove this `mut`
   |
   = note: `#[warn(unused_mut)]` on by default

warning: variable does not need to be mutable
  --> client/src/lib.rs:25:24
   |
25 |     let (mut receiver, mut sender) = client.split().unwrap();
   |                        ----^^^^^^
   |                        |
   |                        help: remove this `mut`

warning: variable does not need to be mutable
  --> client/src/lib.rs:26:9
   |
26 |     let mut hand_state = GameState::default();
   |         ----^^^^^^^^^^
   |         |
   |         help: remove this `mut`

warning: variable does not need to be mutable
   --> client/src/lib.rs:122:24
    |
122 |     let (mut receiver, mut sender) = client.split().unwrap();
    |                        ----^^^^^^
    |                        |
    |                        help: remove this `mut`

warning: unused variable: `rng`
  --> client/src/lib.rs:24:13
   |
24 |     let mut rng = thread_rng();
   |             ^^^ help: if this is intentional, prefix it with an underscore: `_rng`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `sender`
  --> client/src/lib.rs:25:28
   |
25 |     let (mut receiver, mut sender) = client.split().unwrap();
   |                            ^^^^^^ help: if this is intentional, prefix it with an underscore: `_sender`

warning: unused variable: `hand_state`
  --> client/src/lib.rs:26:13
   |
26 |     let mut hand_state = GameState::default();
   |             ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_hand_state`

warning: unused variable: `sender`
   --> client/src/lib.rs:122:28
    |
122 |     let (mut receiver, mut sender) = client.split().unwrap();
    |                            ^^^^^^ help: if this is intentional, prefix it with an underscore: `_sender`

warning: function is never used: `client_loop`
  --> client/src/lib.rs:23:10
   |
23 | async fn client_loop(client: Client<std::net::TcpStream>) {
   |          ^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: 15 warnings emitted

warning: unused variable: `e`
   --> server/src/game_handler.rs:231:21
    |
231 |                 Err(e) => {
    |                     ^ help: if this is intentional, prefix it with an underscore: `_e`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `e`
   --> server/src/game_handler.rs:257:17
    |
257 |             Err(e) => {
    |                 ^ help: iwarning: unused import: `Message`
 --> client/src/lib.rs:4:31
  |
4 | use websocket::{OwnedMessage, Message};
  |                               ^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `PokerEvent`, `PokerMessage`
 --> client/src/lib.rs:7:27
  |
7 | use poker_solver::codec::{PokerEvent, PokerMessage};
  |                           ^^^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `poker_solver::action::Action`
 --> client/src/lib.rs:8:5
  |
8 | use poker_solver::action::Action;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^[Running 'cargo run']
warning: /Users/kwarning: /Users/kmurph/Documents/CSE485PokerSolver/poker_solver/information_abstraction/Cargo.toml: unused manifest key: target.cfg(any(windows, unix)).rustflags
warning: /Users/kmurph/Documents/CSE485PokerSolver/poker_solver/Cargo.toml: unused manifest key: target.cfg(any(windows, unix)).rustflags
    Blocking waiting for file lock     Blocking wait    Blocking waiting for file lock     Blocking wait    Blocking waiting for file lock     Blocking wait    Blocking waiting for file lock     Blocking wait    Blocking waiting for file lock on[Running 'cargo run']
warning: /Users/kwarning: /Users/kmurph/Documents/CSE485PokerSolver/poker_solver/Cargo.toml: unused manifest key: target.cfg(any(windows, unix)).rustflags
warning: /Users/kmurph/Documents/CSE485PokerSolver/poker_solver/information_abstraction/Cargo.toml: unused manifest key: target.cfg(any(windows,     Blocking wait    Blocking waiting for file lock     Blocking wait    Blocking waiting for file lock     Blocking wait    Blocking waiting for file lock     Blocking wait    Blocking waiting for file lock     Blocking wait    Blocking waiting for file lock onwarning: unused iwarning: unused import: `Message`
 --> client/src/lib.rs:4:31
  |
4 | use websocket::{OwnedMessage, Message};
  |                               ^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `PokerEvent`, `PokerMessage`
 --> client/src/lib.rs:7:27
  |
7 | use poker_solver::codec::{PokerEvent, PokerMessage};
  |                           ^^^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `poker_solver::action::Action`
 --> client/src/lib.rs:8:5
  |
8 | use poker_solver::action::Action;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Rng`
 --> client/src/lib.rs:9:12
  |
9 | use rand::{Rng, thread_rng};
  |            ^^^

warning: unused import: `rand::seq::SliceRandom`
  --> client/src/lib.rs:10:5
   |
10 | use rand::seq::SliceRandom;
   |     ^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `serde_json::json`
  --> client/src/lib.rs:11:5
   |
11 | use serde_json::json;
   |     ^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
  --> client/src/lib.rs:24:9
   |
24 |     let mut rng = thread_rng();
   |         ----^^^
   |         |
   |         help: remove this `mut`
   |
   = note: `#[warn(unused_mut)]` on by default

warning: variable does not need to be mutable
  --> client/src/lib.rs:25:24
   |
25 |     let (mut receiver, mut sender) = client.split().unwrap();
   |                        ----^^^^^^
   |                        |
   |                        help: remove this `mut`

warning: variable does not need to be mutable
  --> client/src/lib.rs:26:9
   |
26 |     let mut hand_state = GameState::default();
   |         ----^^^^^^^^^^
   |         |
   |         help: remove this `mut`

warning: unused variable: `rng`
  --> client/src/lib.rs:24:13
   |
24 |     let mut rng = thread_rng();
   |             ^^^ help: if this is intentional, prefix it with an underscore: `_rng`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `sender`
  --> client/src/lib.rs:25:28
   |
25 |     let (mut receiver, mut sender) = client.split().unwrap();
   |                            ^^^^^^ help: if this is intentional, prefix it with an underscore: `_sender`

warning: unused variable: `hand_state`
  --> client/src/lib.rs:26:13
   |
26 |     let mut hand_state = GameState::default();
   |             ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_hand_state`

warning: 12 warnings emitted

warning: unused imports: `Duration`, `sleep`
 --> server/src/handler.rs:6:19
  |
6 | use tokio::time::{sleep, Duration};
  |                   ^^^^^  ^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused variable: `e`
   --> server/src/game_handler.rs:231:21
    |
231 |                 Err(e) => {
    |                     ^ help: if this is intentional, prefix it with an underscore: `_e`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `e`
   --> server/src/game_handler.rs:257:17
    |
257 |             Err(e) => {
    |                 ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: 3 warnings emitted

    Finished dev [unoptimized + debuginfo] target(s) in 31.49s
     Running `/Users/kmurph/Documents/CSE485PokerSolver/poker_solver/target/debug/server`
thread 'main' panicked at 'error binding to 127.0.0.1:3001: error creating server listener: Address already in use (os error 48)', /Users/kmurph/.cargo/registry/src/github.com-1ecc6299db9ec823/warp-0.3.0/src/server.rs:213:27
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
[Finished running. Exit status: 101]
sage`
 --> client/src/liwarning: unused import: `Message`
 --> client/src/lib.rs:4:31
  |
4 | use websocket::{OwnedMessage, Message};
  |                               ^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `PokerEvent`, `PokerMessage`
 --> client/src/lib.rs:7:27
  |
7 | use poker_solver::codec::{PokerEvent, PokerMessage};
  |                           ^^^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `poker_solver::action::Action`
 --> client/src/lib.rs:8:5
  |
8 | use poker_solver::action::Action;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Rng`
 --> client/src/lib.rs:9:12
  |
9 | use rand::{Rng, thread_rng};
  |            ^^^

warning: unused import: `rand::seq::SliceRandom`
  --> client/src/lib.rs:10:5
   |
10 | use rand::seq::SliceRandom;
   |     ^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `serde_json::json`
  --> client/src/lib.rs:11:5
   |
11 | use serde_json::json;
   |     ^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
  --> client/src/lib.rs:24:9
   |
24 |     let mut rng = thread_rng();
   |         ----^^^
   |         |
   |         help: remove this `mut`
   |
   = note: `#[warn(unused_mut)]` on by default

warning: variable does not need to be mutable
  --> client/src/lib.rs:25:24
   |
25 |     let (mut receiver, mut sender) = client.split().unwrap();
   |                        ----^^^^^^
   |                        |
   |                        help: remove this `mut`

warning: variable does not need to be mutable
  --> client/src/lib.rs:26:9
   |
26 |     let mut hand_state = GameState::default();
   |         ----^^^^^^^^^^
   |         |
   |         help: remove this `mut`

warning: unused variable: `rng`
  --> client/src/lib.rs:24:13
   |
24 |     let mut rng = thread_rng();
   |             ^^^ help: if this is intentional, prefix it with an underscore: `_rng`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `sender`
  --> client/src/lib.rs:25:28
   |
25 |     let (mut receiver, mut sender) = client.split().unwrap();
   |                            ^^^^^^ help: if this is intentional, prefix it with an underscore: `_sender`

warning: unused variable: `hand_state`
  --> client/src/lib.rs:26:13
   |
26 |     let mut hand_state = GameState::default();
   |             ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_hand_state`

warning: 12 warnings emitted

warning: unused imports: `Duration`, `sleep`
 --> server/src/handler.rs:6:19
  |
6 | use tokio::time::{sleep, Duration};
  |                   ^^^^^  ^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused variable: `e`
   --> server/src/game_handler.rs:231:21
    |
231 |                 Err(e) => {
    |                     ^ help: if this is intentional, prefix it with an underscore: `_e`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `e`
   --> server/src/game_handler.rs:257:17
    |
257 |             Err(e) => {
    |                 ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: 3 warnings emitted

    Finished dev [unoptimized + debuginfo] target(s) in 31.51s
     Running `/Users/kmurph/Documents/CSE485PokerSolver/poker_solver/target/debug/server`
thread 'main' panicked at 'error binding to 127.0.0.1:3001: error creating server listener: Address already in use (os error 48)', /Users/kmurph/.cargo/registry/src/github.com-1ecc6299db9ec823/warp-0.3.0/src/server.rs:213:27
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
[Finished running. Exit status: 101]
nused manifest key: target.cfg(any(windows, unix)).rustflags
warning: /Users/kmurph/Documents/CSE485PokerSolver/poker_solver/information_abstraction/Cargo.toml: unused manifest key: target.cfg(any(windows, unix)).rustflags
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on build directory
warning: unused import: `Message`
 --> client/src/lib.rs:4:31
  |
4 | use websocket::{OwnedMessage, Message};
  |                               ^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `PokerEvent`, `PokerMessage`
 --> client/src/lib.rs:7:27
  |
7 | use poker_solver::codec::{PokerEvent, PokerMessage};
  |                           ^^^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `poker_solver::action::Action`
 --> client/src/lib.rs:8:5
  |
8 | use poker_solver::action::Action;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Rng`
 --> client/src/lib.rs:9:12
  |
9 | use rand::{Rng, thread_rng};
  |            ^^^

warning: unused import: `rand::seq::SliceRandom`
  --> client/src/lib.rs:10:5
   |
10 | use rand::seq::SliceRandom;
   |     ^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `serde_json::json`
  --> client/src/lib.rs:11:5
   |
11 | use serde_json::json;
   |     ^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
  --> client/src/lib.rs:24:9
   |
24 |     let mut rng = thread_rng();
   |         ----^^^
   |         |
   |         help: remove this `mut`
   |
   = note: `#[warn(unused_mut)]` on by default

warning: variable does not need to be mutable
  --> client/src/lib.rs:25:24
   |
25 |     let (mut receiver, muwarning: unused import: `Message`
 --> client/src/lib.rs:4:31
  |
4 | use websocket::{OwnedMessage, Message};
  |                               ^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `PokerEvent`, `PokerMessage`
 --> client/src/lib.rs:7:27
  |
7 | use poker_solver::codec::{PokerEvent, PokerMessage};
  |                           ^^^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `poker_solver::action::Action`
 --> client/src/lib.rs:8:5
  |
8 | use poker_solver::action::Action;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Rng`
 --> client/src/lib.rs:9:12
  |
9 | use rand::{Rng, thread_rng};
  |            ^^^

warning: unused import: `rand::seq::SliceRandom`
  --> client/src/lib.rs:10:5
   |
10 | use rand::seq::SliceRandom;
   |     ^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `serde_json::json`
  --> client/src/lib.rs:11:5
   |
11 | use serde_json::json;
   |     ^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
  --> client/src/lib.rs:24:9
   |
24 |     let mut rng = thread_rng();
   |         ----^^^
   |         |
   |         help: remove this `mut`
   |
   = note: `#[warn(unused_mut)]` on by default

warning: variable does not need to be mutable
  --> client/src/lib.rs:25:24
   |
25 |     let (mut receiver, mut sender) = client.split().unwrap();
   |                        ----^^^^^^
   |                        |
   |                        help: remove this `mut`

warning: variable does not need to be mutable
  --> client/src/lib.rs:26:9
   |
26 |     let mut hand_state = GameState::default();
   |         ----^^^^^^^^^^
   |         |
   |         help: remove this `mut`

warning: unused variable: `rng`
  --> client/src/lib.rs:24:13
   |
24 |     let mut rng = thread_rng();
   |             ^^^ help: if this is intentional, prefix it with an underscore: `_rng`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `sender`
  --> client/src/lib.rs:25:28
   |
25 |     let (mut receiver, mut sender) = client.split().unwrap();
   |                            ^^^^^^ help: if this is intentional, prefix it with an underscore: `_sender`

warning: unused variable: `hand_state`
  --> client/src/lib.rs:26:13
   |
26 |     let mut hand_state = GameState::default();
   |             ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_hand_state`

warning: 12 warnings emitted

warning: unused imports: `Duration`, `sleep`
 --> server/src/handler.rs:6:19
  |
6 | use tokio::time::{sleep, Duration};
  |                   ^^^^^  ^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused variable: `e`
   --> server/src/game_handler.rs:231:21
    |
231 |                 Err(e) => {
    |                     ^ help: if this is intentional, prefix it with an underscore: `_e`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `e`
   --> server/src/game_handler.rs:257:17
    |
257 |             Err(e) => {
    |                 ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: 3 warnings emitted

    Finished dev [unoptimized + debuginfo] target(s) in 30.31s
     Running `/Users/kmurph/Documents/CSE485PokerSolver/poker_solver/target/debug/server`
thread 'main' panicked at 'error binding to 127.0.0.1:3001: error creating server listener: Address already in use (os error 48)', /Users/kmurph/.cargo/registry/src/github.com-1ecc6299db9ec823/warp-0.3.0/src/server.rs:213:27
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
[Finished running. Exit status: 101]
itted

   Compiling server v0.1.0 (/Users/kmurph/Documents/CSE485PokerSolver/poker_solver/server)
warning: unused variable: `e`
   --> server/src/game_handler.rs:231:21
    |
231 |                 Err(e) => {
    |                     ^ help: if this is intentional, prefix it with an underscore: `_e`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `e`
   --> server/src/game_handler.rs:257:17
    |
257 |             Err(e) => {
    |                 ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: 2 warnings emitted

[Running 'cargo run']
warning: /Users/kmurph/Documents/CSE485PokerSolver/poker_solver/Cargo.toml: unused manifest key: target.cfg(any(windows, unix)).rustflags
warning: /Users/kmurph/Documents/CSE485PokerSolver/poker_solver/information_abstraction/Cargo.toml: unused manifest key: target.cfg(any(windows, unix)).rustflags
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on build directory
warning: unused import: `Message`
 --> client/src/lib.rs:4:31
  |
4 | use websocket::{OwnedMessage, Message};
  |                               ^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `PokerEvent`, `PokerMessage`
 --> client/src/lib.rs:7:27
  |
7 | use poker_solver::codec::{PokerEvent, PokerMessage};
  |                           ^^^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `poker_solver::action::Action`
 --> client/src/lib.rs:8:5
  |
8 | use poker_solver::action::Action;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Rng`
 --> client/src/lib.rs:9:12
  |
9 | use rand::{Rng, thread_rng};
  |            ^^^

warning: unused import: `rand::seq::SliceRandom`
  --> client/src/lib.rs:10:5
   |
10 | use rand::seq::SliceRandom;
   |     ^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `serde_json::json`
  --> client/src/lib.rs:11:5
   |
11 | use serde_json::json;
   |     ^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
  --> client/src/lib.rs:24:9
   |
24 |     let mut rng = thread_rng();
   |         ----^^^
   |         |
   |         help: remove this `mut`
   |
   = note: `#[warn(unused_mut)]` on by default

warning: variable does not need to be mutable
  --> client/src/lib.rs:25:24
   |
25 |     let (mut receiver, mut sender) = client.split().unwrap();
   |                        ----^^^^^^
   |                        |
   |                        help: remove this `mut`

warning: variable does not need to be mutable
  --> client/src/lib.rs:26:9
   |
26 |     let mut hand_state = GameState::default();
   |         ----^^^^^^^^^^
   |         |
   |         help: remove this `mut`

warning: unused variable: `rng`
  --> client/src/lib.rs:24:13
   |
24 |     let mut rng = thread_rng();
   |             ^^^ help: if this is intentional, prefix it with an underscore: `_rng`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `sender`
  --> client/src/lib.rs:25:28
   |
25 |     let (mut receiver, mut sender) = client.split().unwrap();
   |                            ^^^^^^ help: if this is intentional, prefix it with an underscore: `_sender`

warning: unused variable: `hand_state`
  --> client/swarning: unused import: `Message`
 --> client/src/lib.rs:4:31
  |
4 | use websocket::{OwnedMessage, Message};
  |                               ^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `PokerEvent`, `PokerMessage`
 --> client/src/lib.rs:7:27
  |
7 | use poker_solver::codec::{PokerEvent, PokerMessage};
  |                           ^^^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `poker_solver::action::Action`
 --> client/src/lib.rs:8:5
  |
8 | use poker_solver::action::Action;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Rng`
 --> client/src/lib.rs:9:12
  |
9 | use rand::{Rng, thread_rng};
  |            ^^^

warning: unused import: `rand::seq::SliceRandom`
  --> client/src/lib.rs:10:5
   |
10 | use rand::seq::SliceRandom;
   |     ^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `serde_json::json`
  --> client/src/lib.rs:11:5
   |
11 | use serde_json::json;
   |     ^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
  --> client/src/lib.rs:24:9
   |
24 |     let mut rng = thread_rng();
   |         ----^^^
   |         |
   |         help: remove this `mut`
   |
   = note: `#[warn(unused_mut)]` on by default

warning: variable does not need to be mutable
  --> client/src/lib.rs:25:24
   |
25 |     let (mut receiver, mut sender) = client.split().unwrap();
   |                        ----^^^^^^
   |                        |
   |                        help: remove this `mut`

warning: variable does not need to be mutable
  --> client/src/lib.rs:26:9
   |
26 |     let mut hand_state = GameState::default();
   |         ----^^^^^^^^^^
   |         |
   |         help: remove this `mut`

warning: unused variable: `rng`
  --> client/src/lib.rs:24:13
   |
24 |     let mut rng = thread_rng();
   |             ^^^ help: if this is intentional, prefix it with an underscore: `_rng`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `sender`
  --> client/src/lib.rs:25:28
   |
25 |     let (mut receiver, mut sender) = client.split().unwrap();
   |                            ^^^^^^ help: if this is intentional, prefix it with an underscore: `_sender`

warning: unused variable: `hand_state`
  --> client/src/lib.rs:26:13
   |
26 |     let mut hand_state = GameState::default();
   |             ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_hand_state`

warning: 12 warnings emitted

warning: unused imports: `Duration`, `sleep`
 --> server/src/handler.rs:6:19
  |
6 | use tokio::time::{sleep, Duration};
  |                   ^^^^^  ^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused variable: `e`
   --> server/src/game_handler.rs:231:21
    |
231 |                 Err(e) => {
    |                     ^ help: if this is intentional, prefix it with an underscore: `_e`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `e`
   --> server/src/game_handler.rs:257:17
    |
257 |             Err(e) => {
    |                 ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: 3 warnings emitted

    Finished dev [unoptimized + debuginfo] target(s) in 32.26s
     Running `/Users/kmurph/Documents/CSE485PokerSolver/poker_solver/target/debug/server`
thread 'main' panicked at 'error binding to 127.0.0.1:3001: error creating server listener: Address already in use (os error 48)', /Users/kmurph/.cargo/registry/src/github.com-1ecc6299db9ec823/warp-0.3.0/src/server.rs:213:27
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
[Finished running. Exit status: 101]
= thread_rng();
   |             ^^^ help: if this is intentional, prefix it with an underscore: `_rng`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `sender`
  --> client/src/lib.rs:25:28
   |
25 |     let (mut receiver, mut sender) = client.split().unwrap();
   |                            ^^^^^^ help: if this is intentional, prefix it with an underscore: `_sender`

warning: unused variable: `hand_state`
  --> client/src/lib.rs:26:13
   |
26 |     let mut hand_state = GameState::default();
   |             ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_hand_state`

warning: 12 warnings emitted

warning: unused imports: `Duration`, `sleep`
 --> server/src/handler.rs:6:19
  |
6 | use tokio::time::{sleep, Duration};
  |                   ^^^^^  ^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused variable: `e`
   --> server/src/game_handler.rs:231:21
    |
231 |                 Err(e) => {
    |                     ^ help: if this is intentional, prefix it with an underscore: `_e`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `e`
   --> server/src/game_handler.rs:257:17
    |
257 |             Err(e) => {
    |                 ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: 3 warnings emitted

    Finished dev [unoptimized + debuginfo] target(s) in 31.29s
     Running `/Users/kmurph/Documents/CSE485PokerSolver/poker_solver/target/debug/server`
thread 'main' panicked at 'error binding to 127.0.0.1:3001: error creating server listener: Address already in use (os error 48)', /Users/kmurph/.cargo/registry/src/github.com-1ecc6299db9ec823/warp-0.3.0/src/server.rs:213:27
nsh: line 1: 93055 Terminated: 15          cargo run
[Finished running. Exit status: 143]
nning. Exit status: 101]
: `_rng`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `sender`
  --> client/src/lib.rs:25:28
   |
25 |     let (mut receiver, mut sender) = client.split().unwrap();
   |                            ^^^^^^ help: if this is intentional, prefix it with an underscore: `_sender`

warning: unused variable: `hand_state`
  --> client/src/lib.rs:26:13
   |
26 |     let mut hand_state = GameState::default();
   |             ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_hand_state`

warning: 12 warnings emitted

warning: unused imports: `Duration`, `sleep`
 --> server/src/handler.rs:6:19
  |
6 | use tokio::time::{sleep, Duration};
  |                   ^^^^^  ^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused variable: `e`
   --> server/src/game_handler.rs:231:21
    |
231 |                 Err(e) => {
    |                     ^ help: if this is intentional, prefix it with an underscore: `_e`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `e`
   --> server/src/game_handler.rs:257:17
    |
257 |             Err(e) => {
    |                 ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: 3 warnings emitted

    Finished dev [unoptimized + debuginfo] target(s) in 31.21s
     Running `/Users/kmurph/Documents/CSE485PokerSolver/poker_solver/target/debug/server`
thread 'main' panicked at 'error binding to 127.0.0.1:3001: error creating server listener: Address already in use (os error 48)', /Users/kmurph/.cargo/registry/src/github.com-1ecc6299db9ec823/warp-0.3.0/src/server.rs:213:27
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
[Finished running. Exit status: 101]
